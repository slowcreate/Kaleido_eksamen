---
// I Lineup.astro
import BlueBG from "./BlueBG.astro";
// const { data } = Astro.props;

type Artist = {
	artist_name: string;
	created_at: string;
	country: string;
	date: string;
	crew: string | null;
	slug: string;
};

let data: Artist[] = [];

const response = await fetch("https://pdziurppuyuifopvqeap.supabase.co/rest/v1/artists?select=*", {
	method: "GET", 
	headers: {
		apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBkeml1cnBwdXl1aWZvcHZxZWFwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc0NzYwNzAsImV4cCI6MjA2MzA1MjA3MH0.pXBiQO37hl7cZE_5eZiChRZMkCIHq9FsUr-LGE_F3Yg"
	}
});

if (response.ok) {
	const rawData = await response.json();
	data = Array.isArray(rawData)
		? rawData.map((item) => ({
			...item,
			slug: item.artist_name.toLowerCase().replace(/\s+/g, "-"),
		}))
		: [];
} else {
	console.error("Failed to fetch artists", response.status);
}
console.log("Mapped data:", data);

---
<BlueBG>
	<article class="my-5xl">
		<h1>Lineup</h1>
		<section>
		{data.length > 0 ? (
			data.map((artist) => <Lineup data={artist} />)
		) : (
			<p>Intet lineup fundet...</p>
		)}
		</section>
	</article>
</BlueBG>